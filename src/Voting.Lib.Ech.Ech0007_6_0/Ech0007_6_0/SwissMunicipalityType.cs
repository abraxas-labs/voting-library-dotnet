//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.963.0
namespace Ech0007_6_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.963.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("swissMunicipalityType", Namespace="http://www.ech.ch/xmlns/eCH-0007/6")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwissMunicipalityType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// <para xml:lang="en">Total number of digits: 4.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "1", "9999")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("municipalityId", Order=0)]
        public int MunicipalityIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MunicipalityId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MunicipalityIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// <para xml:lang="en">Total number of digits: 4.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> MunicipalityId
        {
            get
            {
                if (this.MunicipalityIdValueSpecified)
                {
                    return this.MunicipalityIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MunicipalityIdValue = value.GetValueOrDefault();
                this.MunicipalityIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(40)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("municipalityName", Order=1)]
        public string MunicipalityName { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("cantonAbbreviation", Order=2)]
        public CantonAbbreviationType CantonAbbreviationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CantonAbbreviation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CantonAbbreviationValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<CantonAbbreviationType> CantonAbbreviation
        {
            get
            {
                if (this.CantonAbbreviationValueSpecified)
                {
                    return this.CantonAbbreviationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CantonAbbreviationValue = value.GetValueOrDefault();
                this.CantonAbbreviationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 10001.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "10001", "99999")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("historyMunicipalityId", Order=3)]
        public int HistoryMunicipalityIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HistoryMunicipalityId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool HistoryMunicipalityIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 10001.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> HistoryMunicipalityId
        {
            get
            {
                if (this.HistoryMunicipalityIdValueSpecified)
                {
                    return this.HistoryMunicipalityIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HistoryMunicipalityIdValue = value.GetValueOrDefault();
                this.HistoryMunicipalityIdValueSpecified = value.HasValue;
            }
        }
    }
}
