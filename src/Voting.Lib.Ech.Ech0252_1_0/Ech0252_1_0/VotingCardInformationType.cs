//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator
namespace Ech0252_1_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("votingCardInformationType", Namespace="http://www.ech.ch/xmlns/eCH-0252/1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VotingCardInformationType
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(uint), "0", "9999999", ConvertValueInInvariantCulture=true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("countOfVotingCardsReceivedInBallotbox", Order=0)]
        public uint CountOfVotingCardsReceivedInBallotboxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountOfVotingCardsReceivedInBallotbox property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CountOfVotingCardsReceivedInBallotboxValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<uint> CountOfVotingCardsReceivedInBallotbox
        {
            get
            {
                if (this.CountOfVotingCardsReceivedInBallotboxValueSpecified)
                {
                    return this.CountOfVotingCardsReceivedInBallotboxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountOfVotingCardsReceivedInBallotboxValue = value.GetValueOrDefault();
                this.CountOfVotingCardsReceivedInBallotboxValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(uint), "0", "9999999", ConvertValueInInvariantCulture=true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("countOfVotingCardsReceivedPrematurelyInBallotbox", Order=1)]
        public uint CountOfVotingCardsReceivedPrematurelyInBallotboxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountOfVotingCardsReceivedPrematurelyInBallotbox property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CountOfVotingCardsReceivedPrematurelyInBallotboxValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<uint> CountOfVotingCardsReceivedPrematurelyInBallotbox
        {
            get
            {
                if (this.CountOfVotingCardsReceivedPrematurelyInBallotboxValueSpecified)
                {
                    return this.CountOfVotingCardsReceivedPrematurelyInBallotboxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountOfVotingCardsReceivedPrematurelyInBallotboxValue = value.GetValueOrDefault();
                this.CountOfVotingCardsReceivedPrematurelyInBallotboxValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(uint), "0", "9999999", ConvertValueInInvariantCulture=true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("countOfVotingCardsReceivedByMail", Order=2)]
        public uint CountOfVotingCardsReceivedByMailValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountOfVotingCardsReceivedByMail property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CountOfVotingCardsReceivedByMailValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<uint> CountOfVotingCardsReceivedByMail
        {
            get
            {
                if (this.CountOfVotingCardsReceivedByMailValueSpecified)
                {
                    return this.CountOfVotingCardsReceivedByMailValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountOfVotingCardsReceivedByMailValue = value.GetValueOrDefault();
                this.CountOfVotingCardsReceivedByMailValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(uint), "0", "9999999", ConvertValueInInvariantCulture=true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("countOfVotingCardsReceivedByEvoting", Order=3)]
        public uint CountOfVotingCardsReceivedByEvotingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountOfVotingCardsReceivedByEvoting property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CountOfVotingCardsReceivedByEvotingValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<uint> CountOfVotingCardsReceivedByEvoting
        {
            get
            {
                if (this.CountOfVotingCardsReceivedByEvotingValueSpecified)
                {
                    return this.CountOfVotingCardsReceivedByEvotingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountOfVotingCardsReceivedByEvotingValue = value.GetValueOrDefault();
                this.CountOfVotingCardsReceivedByEvotingValueSpecified = value.HasValue;
            }
        }
    }
}
