//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator
namespace Ech0110_4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VariantBallotResultTypeTieBreak", Namespace="http://www.ech.ch/xmlns/eCH-0110/4", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VariantBallotResultTypeTieBreak
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("questionIdentification", Order=0)]
        public string QuestionIdentification { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("answerType", Order=1)]
        public Ech0155_4_0.AnswerInformationType AnswerType { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Ech0155_4_0.TieBreakQuestionTypeTieBreakQuestionInfo> _tieBreakQuestion;
        
        [System.Xml.Serialization.XmlArrayAttribute("tieBreakQuestion", Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("tieBreakQuestionInfo", Namespace="http://www.ech.ch/xmlns/eCH-0155/4")]
        public System.Collections.Generic.List<Ech0155_4_0.TieBreakQuestionTypeTieBreakQuestionInfo> TieBreakQuestion
        {
            get
            {
                return _tieBreakQuestion;
            }
            set
            {
                _tieBreakQuestion = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the TieBreakQuestion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TieBreakQuestionSpecified
        {
            get
            {
                return (this.TieBreakQuestion != null);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VariantBallotResultTypeTieBreak" /> class.</para>
        /// </summary>
        public VariantBallotResultTypeTieBreak()
        {
            this._tieBreakQuestion = new System.Collections.Generic.List<Ech0155_4_0.TieBreakQuestionTypeTieBreakQuestionInfo>();
            this._countInFavourOf = new System.Collections.Generic.List<VariantBallotResultTypeTieBreakCountInFavourOf>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("countOfAnswerInvalid", Order=3)]
        public ResultDetailType CountOfAnswerInvalid { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("countOfAnswerEmpty", Order=4)]
        public ResultDetailType CountOfAnswerEmpty { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<VariantBallotResultTypeTieBreakCountInFavourOf> _countInFavourOf;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("countInFavourOf", Order=5)]
        public System.Collections.Generic.List<VariantBallotResultTypeTieBreakCountInFavourOf> CountInFavourOf
        {
            get
            {
                return _countInFavourOf;
            }
            set
            {
                _countInFavourOf = value;
            }
        }
    }
}
