//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.963.0
namespace Ech0252_2_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.963.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ElectionGroupInfoTypeElectionGroupElectionInformation", Namespace="http://www.ech.ch/xmlns/eCH-0252/2", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ElectionGroupInfoTypeElectionGroupElectionInformation
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("election", Order=0)]
        public Ech0155_5_0.ElectionType Election { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<NamedIdType> _otherIdentification;
        
        [System.Xml.Serialization.XmlElementAttribute("otherIdentification", Order=1)]
        public System.Collections.Generic.List<NamedIdType> OtherIdentification
        {
            get
            {
                return _otherIdentification;
            }
            set
            {
                _otherIdentification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the OtherIdentification collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherIdentificationSpecified
        {
            get
            {
                return ((this.OtherIdentification != null) 
                            && (this.OtherIdentification.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ElectionGroupInfoTypeElectionGroupElectionInformation" /> class.</para>
        /// </summary>
        public ElectionGroupInfoTypeElectionGroupElectionInformation()
        {
            this._otherIdentification = new System.Collections.Generic.List<NamedIdType>();
            this._candidate = new System.Collections.Generic.List<CandidateType>();
            this._list = new System.Collections.Generic.List<Ech0155_5_0.ListType>();
            this._listUnion = new System.Collections.Generic.List<Ech0155_5_0.ListUnionType>();
            this._namedElement = new System.Collections.Generic.List<NamedElementType>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.00.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.00.</para>
        /// <para xml:lang="en">Total number of digits: 5.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.00", "100.00", ParseLimitsInInvariantCulture=true, ConvertValueInInvariantCulture=true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("quorum", Order=2)]
        public decimal QuorumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Quorum property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool QuorumValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.00.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100.00.</para>
        /// <para xml:lang="en">Total number of digits: 5.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Quorum
        {
            get
            {
                if (this.QuorumValueSpecified)
                {
                    return this.QuorumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QuorumValue = value.GetValueOrDefault();
                this.QuorumValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("referencedElectionAssociationId", Order=3)]
        public string ReferencedElectionAssociationId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CandidateType> _candidate;
        
        [System.Xml.Serialization.XmlElementAttribute("candidate", Order=4)]
        public System.Collections.Generic.List<CandidateType> Candidate
        {
            get
            {
                return _candidate;
            }
            set
            {
                _candidate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Candidate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CandidateSpecified
        {
            get
            {
                return ((this.Candidate != null) 
                            && (this.Candidate.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Ech0155_5_0.ListType> _list;
        
        [System.Xml.Serialization.XmlElementAttribute("list", Order=5)]
        public System.Collections.Generic.List<Ech0155_5_0.ListType> List
        {
            get
            {
                return _list;
            }
            set
            {
                _list = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the List collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListSpecified
        {
            get
            {
                return ((this.List != null) 
                            && (this.List.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<Ech0155_5_0.ListUnionType> _listUnion;
        
        [System.Xml.Serialization.XmlElementAttribute("listUnion", Order=6)]
        public System.Collections.Generic.List<Ech0155_5_0.ListUnionType> ListUnion
        {
            get
            {
                return _listUnion;
            }
            set
            {
                _listUnion = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ListUnion collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListUnionSpecified
        {
            get
            {
                return ((this.ListUnion != null) 
                            && (this.ListUnion.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<NamedElementType> _namedElement;
        
        [System.Xml.Serialization.XmlElementAttribute("namedElement", Order=7)]
        public System.Collections.Generic.List<NamedElementType> NamedElement
        {
            get
            {
                return _namedElement;
            }
            set
            {
                _namedElement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NamedElement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NamedElementSpecified
        {
            get
            {
                return ((this.NamedElement != null) 
                            && (this.NamedElement.Count != 0));
            }
        }
    }
}
