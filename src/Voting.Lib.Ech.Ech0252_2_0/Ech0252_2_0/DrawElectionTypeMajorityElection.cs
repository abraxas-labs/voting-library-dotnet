//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator
namespace Ech0252_2_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DrawElectionTypeMajorityElection", Namespace="http://www.ech.ch/xmlns/eCH-0252/2", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrawElectionTypeMajorityElection
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("isDrawPending", Order=0)]
        public bool IsDrawPending { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CandidateOrWriteInCandidateType> _candidateDrawElection;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("candidateDrawElection", Order=1)]
        public System.Collections.Generic.List<CandidateOrWriteInCandidateType> CandidateDrawElection
        {
            get
            {
                return _candidateDrawElection;
            }
            set
            {
                _candidateDrawElection = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DrawElectionTypeMajorityElection" /> class.</para>
        /// </summary>
        public DrawElectionTypeMajorityElection()
        {
            this._candidateDrawElection = new System.Collections.Generic.List<CandidateOrWriteInCandidateType>();
            this._winningCandidate = new System.Collections.Generic.List<CandidateOrWriteInCandidateType>();
            this._namedElement = new System.Collections.Generic.List<NamedElementType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<CandidateOrWriteInCandidateType> _winningCandidate;
        
        [System.Xml.Serialization.XmlElementAttribute("winningCandidate", Order=2)]
        public System.Collections.Generic.List<CandidateOrWriteInCandidateType> WinningCandidate
        {
            get
            {
                return _winningCandidate;
            }
            set
            {
                _winningCandidate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the WinningCandidate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WinningCandidateSpecified
        {
            get
            {
                return (this.WinningCandidate != null);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<NamedElementType> _namedElement;
        
        [System.Xml.Serialization.XmlElementAttribute("namedElement", Order=3)]
        public System.Collections.Generic.List<NamedElementType> NamedElement
        {
            get
            {
                return _namedElement;
            }
            set
            {
                _namedElement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NamedElement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NamedElementSpecified
        {
            get
            {
                return (this.NamedElement != null);
            }
        }
    }
}
