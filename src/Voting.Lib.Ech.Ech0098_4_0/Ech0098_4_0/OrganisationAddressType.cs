//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator
namespace Ech0098_4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("organisationAddressType", Namespace="http://www.ech.ch/xmlns/eCH-0098/4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrganisationAddressType
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("addressCategory", Order=0)]
        public string AddressCategory { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 60.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(60)]
        [System.Xml.Serialization.XmlElementAttribute("addressLine1", Order=1)]
        public string AddressLine1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 60.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(60)]
        [System.Xml.Serialization.XmlElementAttribute("addressLine2", Order=2)]
        public string AddressLine2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 60.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(60)]
        [System.Xml.Serialization.XmlElementAttribute("street", Order=3)]
        public string Street { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.Xml.Serialization.XmlElementAttribute("houseNumber", Order=4)]
        public string HouseNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.Xml.Serialization.XmlElementAttribute("dwellingNumber", Order=5)]
        public string DwellingNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 99999999.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("postOfficeBoxNumber", Order=6)]
        public uint PostOfficeBoxNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PostOfficeBoxNumber property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PostOfficeBoxNumberValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum inclusive value: 99999999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<uint> PostOfficeBoxNumber
        {
            get
            {
                if (this.PostOfficeBoxNumberValueSpecified)
                {
                    return this.PostOfficeBoxNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PostOfficeBoxNumberValue = value.GetValueOrDefault();
                this.PostOfficeBoxNumberValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(40)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("town", Order=7)]
        public string Town { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1000.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(uint), "1000", "9999", ConvertValueInInvariantCulture=true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("swissZipCode", Order=8)]
        public uint SwissZipCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SwissZipCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SwissZipCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1000.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<uint> SwissZipCode
        {
            get
            {
                if (this.SwissZipCodeValueSpecified)
                {
                    return this.SwissZipCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SwissZipCodeValue = value.GetValueOrDefault();
                this.SwissZipCodeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.Xml.Serialization.XmlElementAttribute("swissZipCodeAddOn", Order=9)]
        public string SwissZipCodeAddOn { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// <para xml:lang="en">Total number of digits: 4.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "1", "9999")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("municipalityId", Order=10)]
        public int MunicipalityIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MunicipalityId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MunicipalityIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// <para xml:lang="en">Total number of digits: 4.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> MunicipalityId
        {
            get
            {
                if (this.MunicipalityIdValueSpecified)
                {
                    return this.MunicipalityIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MunicipalityIdValue = value.GetValueOrDefault();
                this.MunicipalityIdValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("cantonAbbreviation", Order=11)]
        public Ech0007_6_0.CantonAbbreviationType CantonAbbreviationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CantonAbbreviation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CantonAbbreviationValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<Ech0007_6_0.CantonAbbreviationType> CantonAbbreviation
        {
            get
            {
                if (this.CantonAbbreviationValueSpecified)
                {
                    return this.CantonAbbreviationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CantonAbbreviationValue = value.GetValueOrDefault();
                this.CantonAbbreviationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(uint), "1", "999999999", ConvertValueInInvariantCulture=true)]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("EGID", Order=12)]
        public uint EgidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Egid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EgidValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999999999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<uint> Egid
        {
            get
            {
                if (this.EgidValueSpecified)
                {
                    return this.EgidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EgidValue = value.GetValueOrDefault();
                this.EgidValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 15.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(15)]
        [System.Xml.Serialization.XmlElementAttribute("foreignZipCode", Order=13)]
        public string ForeignZipCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("countryIdISO2", Order=14)]
        public string CountryIdIso2 { get; set; }
    }
}
