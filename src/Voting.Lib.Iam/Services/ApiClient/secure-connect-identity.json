{
  "swagger": "2.0",
  "info": {
    "title": "Identity Service",
    "version": "1.0",
    "contact": {
      "url": "https://gitlab.abraxas-tools.ch/secure/apps/secure-connect/identity"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "application/grpc"
  ],
  "produces": [
    "application/json",
    "application/grpc"
  ],
  "paths": {
    "/2fa/providers": {
      "get": {
        "operationId": "IdentityService_GetSecondFactorProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SecondFactorProviders"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/contacts": {
      "get": {
        "operationId": "IdentityService_GetContacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Contacts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "tenantid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastModified",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lifecycles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATELESS",
                "ARCHIVED",
                "DELETED",
                "ACTIVE",
                "INACTIVE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "origin",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/fullusers": {
      "get": {
        "operationId": "IdentityService_GetFullUserList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Users"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "firstname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "servicename",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastModified",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lifecycles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATELESS",
                "ARCHIVED",
                "DELETED",
                "ACTIVE",
                "INACTIVE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "origin",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "loginids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "externalid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/healthz": {
      "get": {
        "summary": "---------\nProbes\n---------",
        "operationId": "IdentityService_Healthz",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiReturnMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins": {
      "post": {
        "operationId": "IdentityService_CreateLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Login"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Login"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      },
      "put": {
        "operationId": "IdentityService_UpdateLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Login"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Login"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/externalid/{id}": {
      "get": {
        "operationId": "IdentityService_GetLoginByExternalIdpId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Login"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/me/2fa": {
      "delete": {
        "summary": "DeleteSecondFactor delets the second factor for the specified provider or\nfor all providers if no provider is specified",
        "operationId": "IdentityService_DeleteSecondFactorMe2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "passwordLess",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      },
      "post": {
        "summary": "CreateSecondFactorMe creates a second factor for the provided provider\nthe provider maybe requires verification\nif it's the first added 2fa a recovery code will be returned",
        "operationId": "IdentityService_CreateSecondFactorMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSecondFactorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSecondFactorRequest"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/me/2fa/request": {
      "post": {
        "summary": "RequestSecondFactor requests a new 2fa-auth (sends sms, etc.)\nif a provider is specified the provider specified is the preverence,\nif the provider is not found or not configured the first configured provider will be used\nthe used provider can be found in the response",
        "operationId": "IdentityService_RequestSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RequestSecondFactorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SecondFactorProviderItem"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/me/2fa/status": {
      "get": {
        "summary": "SecondFactorStatus returns the status of the second factor",
        "operationId": "IdentityService_SecondFactorStatusMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SecondFactorStatuses"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "provider_status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ADDED_NOT_VERIFIED",
              "READY"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "passwordLess",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/me/2fa/verify": {
      "post": {
        "summary": "VerifySecondFactor verifies the second factor\nif it's the first verification of a second 2fa of a user the provider field is required\nif the provider is recovery_code and the code is correct, all 2fa's of the current user\nget deleted",
        "operationId": "IdentityService_VerifySecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifySecondFactorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerifySecondFactorRequest"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/me/2fa/{provider}": {
      "delete": {
        "summary": "DeleteSecondFactor delets the second factor for the specified provider or\nfor all providers if no provider is specified",
        "operationId": "IdentityService_DeleteSecondFactorMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "passwordLess",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/resetpw": {
      "post": {
        "operationId": "IdentityService_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordReset"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/resetpw/request": {
      "post": {
        "summary": "this api returns always OK unless a technical error occurred\n(wether the user is found or not => OK is returned)",
        "operationId": "IdentityService_RequestPasswordReset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Username"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/username/{username}": {
      "get": {
        "operationId": "IdentityService_GetLoginByUsername",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Login"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/{id}": {
      "get": {
        "operationId": "IdentityService_GetLoginById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Login"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/{id}/history": {
      "get": {
        "operationId": "IdentityService_GetLoginHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChangeObjects"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/{loginid}/2fa": {
      "delete": {
        "operationId": "IdentityService_DeleteSecondFactor2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "passwordLess",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      },
      "post": {
        "summary": "CreateSecondFactor creates a second factor for the provided provider and loginid\nthe provider maybe requires verification\nif it's the first added 2fa a recovery code will be returned",
        "operationId": "IdentityService_CreateSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSecondFactorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSecondFactorRequest"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/{loginid}/2fa/request": {
      "post": {
        "operationId": "IdentityService_RequestSecondFactorByLoginId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RequestSecondFactorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SecondFactorProviderItem"
            }
          },
          {
            "name": "x-vrsg-tenant",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/{loginid}/2fa/status": {
      "get": {
        "operationId": "IdentityService_SecondFactorStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SecondFactorStatuses"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "provider_status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ADDED_NOT_VERIFIED",
              "READY"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "passwordLess",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/{loginid}/2fa/verify": {
      "post": {
        "operationId": "IdentityService_VerifySecondFactorByLoginId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifySecondFactorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerifySecondFactorRequest"
            }
          },
          {
            "name": "x-vrsg-tenant",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/logins/{loginid}/2fa/{provider}": {
      "delete": {
        "operationId": "IdentityService_DeleteSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "passwordLess",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/magiclink": {
      "get": {
        "operationId": "IdentityService_GetMagicLinkUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      },
      "post": {
        "operationId": "IdentityService_CreateMagicLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MagicLinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MagicLink"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/me/changepw": {
      "post": {
        "summary": "---------\nLogin\n---------",
        "operationId": "IdentityService_ChangeMyPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiReturnMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordSetter"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/overwritepw": {
      "post": {
        "operationId": "IdentityService_OverwritePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiReturnMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordSetter"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/ready": {
      "get": {
        "operationId": "IdentityService_Ready",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiReturnMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/userlogin": {
      "post": {
        "operationId": "IdentityService_CreateUserWithLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Userlogin"
            }
          },
          {
            "name": "x-vrsg-tenant",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/userlogin/init": {
      "post": {
        "operationId": "IdentityService_InitUserLoginWithEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserloginWithMail"
            }
          },
          {
            "name": "x-vrsg-tenant",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "---------\nUsers\n---------",
        "operationId": "IdentityService_GetUserList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisplayUsers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "firstname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "servicename",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lastModified",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lifecycles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATELESS",
                "ARCHIVED",
                "DELETED",
                "ACTIVE",
                "INACTIVE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "origin",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "loginids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "externalid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      },
      "post": {
        "operationId": "IdentityService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/display/{id}": {
      "get": {
        "operationId": "IdentityService_GetDisplayUserByLoginId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DisplayUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/emails/verify": {
      "post": {
        "operationId": "IdentityService_VerifyUserEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1Email"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EmailVerificationCode"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/externalid/{id}": {
      "get": {
        "operationId": "IdentityService_GetUserByExternalIdpId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/loginid/{id}": {
      "get": {
        "operationId": "IdentityService_GetUserByLoginId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/userPw": {
      "post": {
        "operationId": "IdentityService_GetUserByUsernamePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserPassword"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/username/{username}": {
      "get": {
        "operationId": "IdentityService_GetUserByUsername",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{idOne}/contacts/{idTwo}": {
      "get": {
        "operationId": "IdentityService_GetUserContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1Contact"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "idOne",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "idTwo",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      },
      "delete": {
        "operationId": "IdentityService_DeleteUserContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "idOne",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "idTwo",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "IdentityService_GetUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      },
      "delete": {
        "operationId": "IdentityService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiReturnMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{id}/history": {
      "get": {
        "operationId": "IdentityService_GetUserHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v3ChangeObjects"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{id}/labels": {
      "get": {
        "operationId": "IdentityService_GetUserLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiLabels"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{loginId}/contacts": {
      "post": {
        "operationId": "IdentityService_AddUserContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1Contact"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiv1Contact"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{loginId}/contacts/{id}": {
      "put": {
        "operationId": "IdentityService_UpdateUserContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1Contact"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiv1Contact"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/emails": {
      "post": {
        "operationId": "IdentityService_AddUserEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1Email"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserEmail"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/emails/primary": {
      "post": {
        "operationId": "IdentityService_SetPrimaryUserEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1Email"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserEmail"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/emails/resendverification": {
      "post": {
        "operationId": "IdentityService_ResendUserEmailVerification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserEmail"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/emails/{email}": {
      "delete": {
        "operationId": "IdentityService_DeleteUserEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "email",
            "description": "regexp gemaess https://stackoverflow.com/a/14075810 (RFC 5321/5322)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "verified",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/phones": {
      "post": {
        "operationId": "IdentityService_AddUserPhoneNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1PhoneNumber"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserPhoneNumber"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/phones/primary": {
      "post": {
        "operationId": "IdentityService_SetPrimaryUserPhoneNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1PhoneNumber"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserPhoneNumber"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/phones/resendverification": {
      "post": {
        "operationId": "IdentityService_ResendUserPhoneNumberVerification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserPhoneNumber"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/phones/verify": {
      "post": {
        "operationId": "IdentityService_VerifyUserPhoneNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiv1PhoneNumber"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PhoneNumberVerificationCode"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{login_id}/phones/{phonenumber}": {
      "delete": {
        "operationId": "IdentityService_DeleteUserPhoneNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {

              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "phonenumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "verified",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{loginid}": {
      "put": {
        "operationId": "IdentityService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{loginid}/contacts": {
      "get": {
        "operationId": "IdentityService_GetUserContacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Contacts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "tenantid",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastModified",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lifecycles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STATELESS",
                "ARCHIVED",
                "DELETED",
                "ACTIVE",
                "INACTIVE"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "origin",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/users/{loginid}/labels": {
      "put": {
        "operationId": "IdentityService_UpdateUserLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "loginid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "IdentityService"
        ]
      }
    },
    "/validate": {
      "get": {
        "operationId": "IdentityService_Validate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiLabels"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "IdentityService"
        ]
      }
    }
  },
  "definitions": {
    "apiAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "country": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "primary": {
          "type": "boolean"
        },
        "region": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        },
        "loginId": {
          "type": "string",
          "format": "uint64"
        },
        "tenantId": {
          "type": "string",
          "format": "uint64"
        },
        "contactId": {
          "type": "string",
          "format": "uint64"
        },
        "generation": {
          "type": "string",
          "format": "int64"
        },
        "lifecycle": {
          "$ref": "#/definitions/apiStorageLifecycle"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "apiLabels": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        }
      }
    },
    "apiReturnMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "apiStorageLifecycle": {
      "type": "string",
      "enum": [
        "STATELESS",
        "ARCHIVED",
        "DELETED",
        "ACTIVE",
        "INACTIVE"
      ],
      "default": "STATELESS"
    },
    "apiv1Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiEmail"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiPhoneNumber"
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiAddress"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        },
        "tenantId": {
          "type": "string",
          "format": "uint64"
        },
        "loginId": {
          "type": "string",
          "format": "uint64"
        },
        "generation": {
          "type": "string",
          "format": "int64"
        },
        "lifecycle": {
          "$ref": "#/definitions/apiStorageLifecycle"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceowner": {
          "type": "string"
        },
        "mappingIDs": {
          "$ref": "#/definitions/v1MappingIDs"
        }
      }
    },
    "apiv1Email": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "regexp gemaess https://stackoverflow.com/a/14075810 (RFC 5321/5322)"
        },
        "primary": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        },
        "verified": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "apiv1PhoneNumber": {
      "type": "object",
      "properties": {
        "phonenumber": {
          "type": "string"
        },
        "primary": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        },
        "verified": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "apiv1Type": {
      "type": "string",
      "enum": [
        "MAGIC_EMAIL",
        "MAGIC_SMS",
        "MAGIC_VOICE"
      ],
      "default": "MAGIC_EMAIL"
    },
    "commonapiEmail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "email": {
          "type": "string",
          "title": "regexp gemaess https://stackoverflow.com/a/14075810 (RFC 5321/5322)"
        },
        "primary": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        },
        "verified": {
          "type": "boolean"
        },
        "loginId": {
          "type": "string",
          "format": "uint64"
        },
        "tenantId": {
          "type": "string",
          "format": "uint64"
        },
        "contactId": {
          "type": "string",
          "format": "uint64"
        },
        "generation": {
          "type": "string",
          "format": "int64"
        },
        "lifecycle": {
          "$ref": "#/definitions/apiStorageLifecycle"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "commonapiLabel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "commonapiPhoneNumber": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "phonenumber": {
          "type": "string"
        },
        "primary": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        },
        "verified": {
          "type": "boolean"
        },
        "loginId": {
          "type": "string",
          "format": "uint64"
        },
        "tenantId": {
          "type": "string",
          "format": "uint64"
        },
        "contactId": {
          "type": "string",
          "format": "uint64"
        },
        "generation": {
          "type": "string",
          "format": "int64"
        },
        "lifecycle": {
          "$ref": "#/definitions/apiStorageLifecycle"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Contacts": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiv1Contact"
          }
        }
      }
    },
    "v1CreateSecondFactorNevisResponse": {
      "type": "object",
      "properties": {
        "qr": {
          "type": "string"
        },
        "mobileRegistrationLink": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "v1CreateSecondFactorOTPResponse": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1CreateSecondFactorRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1SecondFactorProvider"
        },
        "phonenumber": {
          "type": "string"
        },
        "loginid": {
          "type": "string",
          "format": "uint64"
        },
        "verified": {
          "type": "boolean"
        }
      }
    },
    "v1CreateSecondFactorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1SecondFactorProviderStatus"
        },
        "recovery_code": {
          "type": "string"
        },
        "otp": {
          "$ref": "#/definitions/v1CreateSecondFactorOTPResponse"
        },
        "nevis": {
          "$ref": "#/definitions/v1CreateSecondFactorNevisResponse"
        }
      }
    },
    "v1DisplayUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "loginid": {
          "type": "string",
          "format": "uint64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "servicename": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/apiStorageLifecycle"
        },
        "primaryMail": {
          "type": "string"
        }
      }
    },
    "v1DisplayUsers": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1DisplayUser"
          }
        }
      }
    },
    "v1EmailVerificationCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "v1Gender": {
      "type": "string",
      "enum": [
        "GENDER_UNKNOWN",
        "FEMALE",
        "MALE"
      ],
      "default": "GENDER_UNKNOWN"
    },
    "v1Login": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "byte"
        },
        "externalIdps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "generation": {
          "type": "string",
          "format": "int64"
        },
        "lifecycle": {
          "$ref": "#/definitions/apiStorageLifecycle"
        },
        "passwordState": {
          "$ref": "#/definitions/v1PasswordState"
        }
      }
    },
    "v1MagicLink": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "loginid": {
          "type": "string",
          "format": "uint64"
        },
        "user": {
          "$ref": "#/definitions/v1MagicLinkUser"
        },
        "ttl": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/apiv1Type"
        },
        "onetime": {
          "type": "boolean"
        },
        "disableNotification": {
          "type": "boolean"
        },
        "magic_link_url": {
          "type": "string"
        }
      }
    },
    "v1MagicLinkResponse": {
      "type": "object",
      "properties": {
        "loginid": {
          "type": "string",
          "format": "uint64"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "v1MagicLinkUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "resource_owner_tenant_id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1MappingIDs": {
      "type": "object",
      "properties": {
        "abx_crm_contact_record_id": {
          "type": "string"
        },
        "vrsg_crm_contact_record_id": {
          "type": "string"
        },
        "abx_crm_contact_id": {
          "type": "string"
        },
        "abx_sap_businespartner_id": {
          "type": "string"
        },
        "vrsg_crm_partner_id": {
          "type": "string"
        }
      }
    },
    "v1PasswordReset": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "newpassword1": {
          "type": "string"
        },
        "newpassword2": {
          "type": "string"
        }
      }
    },
    "v1PasswordSetter": {
      "type": "object",
      "properties": {
        "loginid": {
          "type": "string",
          "format": "uint64"
        },
        "oldpassword": {
          "type": "string"
        },
        "newpassword1": {
          "type": "string"
        },
        "newpassword2": {
          "type": "string"
        }
      }
    },
    "v1PasswordState": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "INITIAL",
        "ACTIVE"
      ],
      "default": "UNDEFINED"
    },
    "v1PhoneNumberVerificationCode": {
      "type": "object",
      "properties": {
        "login_id": {
          "type": "string",
          "format": "uint64"
        },
        "phonenumber": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "v1RequestSecondFactorResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1SecondFactorProvider"
        },
        "no_user_input_needed": {
          "type": "boolean"
        },
        "resend_possible": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "v1SecondFactorProvider": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "NONE",
        "RECOVERY_CODE",
        "OTP",
        "SMS",
        "VOICE",
        "NEVIS"
      ],
      "default": "DEFAULT"
    },
    "v1SecondFactorProviderItem": {
      "type": "object",
      "properties": {
        "loginid": {
          "type": "string",
          "format": "uint64"
        },
        "provider": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "passwordLess": {
          "type": "boolean"
        }
      }
    },
    "v1SecondFactorProviderStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ADDED_NOT_VERIFIED",
        "READY"
      ],
      "default": "UNKNOWN"
    },
    "v1SecondFactorProviders": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SecondFactorStatus": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1SecondFactorProvider"
        },
        "status": {
          "$ref": "#/definitions/v1SecondFactorProviderStatus"
        },
        "phonenumber": {
          "type": "string"
        },
        "recovery_code": {
          "type": "string"
        }
      }
    },
    "v1SecondFactorStatuses": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SecondFactorStatus"
          }
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "loginid": {
          "type": "string",
          "format": "uint64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "servicename": {
          "type": "string"
        },
        "generation": {
          "type": "string",
          "format": "int64"
        },
        "emails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiv1Email"
          }
        },
        "phonenumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiv1PhoneNumber"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonapiLabel"
          }
        },
        "lifecycle": {
          "$ref": "#/definitions/apiStorageLifecycle"
        },
        "type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "externalIdps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "resourceowner": {
          "type": "string"
        },
        "passwordState": {
          "$ref": "#/definitions/v1PasswordState"
        },
        "resource_owner_tenant_id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1UserEmail": {
      "type": "object",
      "properties": {
        "login_id": {
          "type": "string",
          "format": "uint64"
        },
        "email": {
          "type": "string",
          "title": "regexp gemaess https://stackoverflow.com/a/14075810 (RFC 5321/5322)"
        },
        "verified": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1UserPassword": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1UserPhoneNumber": {
      "type": "object",
      "properties": {
        "login_id": {
          "type": "string",
          "format": "uint64"
        },
        "phonenumber": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "v1Userlogin": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "password1": {
          "type": "string"
        },
        "password2": {
          "type": "string"
        }
      }
    },
    "v1UserloginWithMail": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1Username": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "includeDeleted": {
          "type": "boolean"
        }
      }
    },
    "v1Users": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1VerifySecondFactorRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1SecondFactorProvider",
          "title": "optional provider"
        },
        "code": {
          "type": "string"
        },
        "loginid": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1VerifySecondFactorResponse": {
      "type": "object",
      "properties": {
        "recovery_code": {
          "type": "string",
          "title": "only when verifing for the first time"
        }
      }
    },
    "v3ChangeObject": {
      "type": "object",
      "properties": {
        "changeDate": {
          "type": "string",
          "format": "date-time"
        },
        "generation": {
          "type": "string",
          "format": "int64"
        },
        "modifier": {
          "type": "string"
        },
        "attribut": {
          "type": "string"
        },
        "new": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "old": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "objecttype": {
          "type": "string"
        }
      }
    },
    "v3ChangeObjects": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v3ChangeObject"
          }
        }
      }
    }
  }
}